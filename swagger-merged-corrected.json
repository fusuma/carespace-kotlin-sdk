{
  "openapi": "3.0.0",
  "paths": {
    "/auth/login": {
      "get": {
        "operationId": "AuthController_login",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/logout": {
      "get": {
        "operationId": "AuthController_logout",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/token": {
      "post": {
        "operationId": "AuthController_token",
        "parameters": [],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/sign-in": {
      "post": {
        "description": "Allows users to sign in by providing their credentials. Upon successful authentication, the server returns an access token and a refresh token, which can be used for subsequent authenticated requests and token renewal, respectively.",
        "operationId": "AuthController_signIn",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignInDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthSignInResponseDto"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/refresh-token": {
      "post": {
        "description": "Allows users to refresh their access token using a valid refresh token. It helps maintain an active session without requiring the user to re-authenticate with their credentials.",
        "operationId": "AuthController_refreshToken",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/register": {
      "post": {
        "description": "Allows new users to register by providing the necessary information. Upon successful registration, the server may return an access token and a refresh token, allowing immediate authentication.",
        "operationId": "AuthController_register",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthRegisterResponseDto"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/sign-out": {
      "post": {
        "description": "Allows users to sign out by invalidating the current access and refresh tokens. It effectively ends the user session, requiring them to sign in again to obtain new tokens.",
        "operationId": "AuthController_signOut",
        "parameters": [],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/password-recovery": {
      "post": {
        "operationId": "AuthController_passwordRecovery",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordRecoveryDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/clients": {
      "post": {
        "description": "This endpoint creates a new client instance. It registers a new customer in the multi-tenant application.",
        "operationId": "ClientController_create",
        "parameters": [],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Client"
        ]
      },
      "get": {
        "description": "This endpoint retrieves a list of all client instances. It provides an overview of all registered clients in the system.",
        "operationId": "ClientController_getAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Client"
        ]
      }
    },
    "/clients/{id}": {
      "get": {
        "description": "This endpoint retrieves details of a specific client instance by their unique identifier.",
        "operationId": "ClientController_get",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Client"
        ]
      },
      "patch": {
        "description": "This endpoint updates details of a specific client instance. Only the fields that need to be updated should be provided.",
        "operationId": "ClientController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateClientDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Client"
        ]
      },
      "delete": {
        "description": "This endpoint deletes a specific client instance by their unique identifier. It removes the client from the system.",
        "operationId": "ClientController_delete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Client"
        ]
      }
    },
    "/clients/invite-code/{inviteCode}": {
      "get": {
        "description": "This endpoint verifies and handles actions related to an invite code. It ensures that the provided invite code is valid and performs any necessary actions associated with it.",
        "operationId": "ClientController_getClientByInviteCode",
        "parameters": [
          {
            "name": "inviteCode",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Client"
        ]
      }
    },
    "/users/summary": {
      "get": {
        "description": "Retrieves a summary of all users (patients). It provides an overview of user statistics and other relevant summary information.",
        "operationId": "UserController_getUsersSummary",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSummaryResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Users"
        ]
      }
    },
    "/users/new": {
      "get": {
        "description": "Creates a new user (patient) in the system. It registers a new patient with the necessary information.",
        "operationId": "UserController_getAllNew",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponsePaginatedDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Users"
        ]
      }
    },
    "/users/physiotherapists": {
      "get": {
        "description": "Retrieves a list of all physiotherapists (admin). It provides detailed information about all physiotherapists.",
        "operationId": "UserController_getAllPhysiotherapists",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponsePaginatedDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Users"
        ]
      }
    },
    "/users/unassigned": {
      "get": {
        "description": "Retrieves a list of all unassigned users. It provides detailed information about all unassigned users in the system.",
        "operationId": "UserController_getAllUnassigned",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "name",
            "required": false,
            "in": "query",
            "description": "Name",
            "schema": {
              "example": "John Doe",
              "type": "string"
            }
          },
          {
            "name": "role",
            "required": false,
            "in": "query",
            "description": "Role",
            "schema": {
              "$ref": "#/components/schemas/Object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponsePaginatedDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Users"
        ]
      }
    },
    "/users/pending-invites": {
      "get": {
        "description": "Retrieves a list of all unassigned users. It provides detailed information about all unassigned users in the system.",
        "operationId": "UserController_getAllPendingInvites",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "name",
            "required": false,
            "in": "query",
            "description": "Name",
            "schema": {
              "example": "John Doe",
              "type": "string"
            }
          },
          {
            "name": "role",
            "required": false,
            "in": "query",
            "description": "Role",
            "schema": {
              "$ref": "#/components/schemas/Object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInviteResponsePaginatedDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Users"
        ]
      }
    },
    "/users/assigned/{physiotherapistId}": {
      "get": {
        "description": "Retrieves a list of all assigned users. It provides detailed information about all assigned users in the system.",
        "operationId": "UserController_getAllAssignedByPhysiotherapist",
        "parameters": [
          {
            "name": "physiotherapistId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "name",
            "required": false,
            "in": "query",
            "description": "Name",
            "schema": {
              "example": "John Doe",
              "type": "string"
            }
          },
          {
            "name": "role",
            "required": false,
            "in": "query",
            "description": "Role",
            "schema": {
              "$ref": "#/components/schemas/Object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponsePaginatedDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Users"
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "description": "Retrieves details of a specific user (patient) by their unique identifier.",
        "operationId": "UserController_get",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Users"
        ]
      },
      "patch": {
        "description": "Updates details of a specific user (patient). Only the fields that need to be updated should be provided.",
        "operationId": "UserController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Users"
        ]
      },
      "delete": {
        "description": "",
        "operationId": "UserController_delete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Users"
        ]
      }
    },
    "/users": {
      "get": {
        "description": "Retrieves a list of all users (patients). It provides detailed information about all registered users in the system.",
        "operationId": "UserController_getAll",
        "parameters": [
          {
            "name": "name",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserResponseDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Users"
        ]
      }
    },
    "/users/{id}/profile": {
      "get": {
        "description": "Retrieves the profile information of a specific user (patient). It provides detailed profile information based on the user's unique identifier.",
        "operationId": "UserController_profile",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Users"
        ]
      }
    },
    "/users/activate": {
      "post": {
        "description": "Activates a user (patient) account. It ensures that the user's account is activated and ready for use.",
        "operationId": "UserController_activateUser",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserActivateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Users"
        ]
      }
    },
    "/users/{userId}/update-password": {
      "patch": {
        "operationId": "UserController_updatePassword",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdatePasswordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/users/associate-patient-physiotherapist": {
      "post": {
        "description": "Associates a physiotherapist (admin) with a patient (user). It ensures that the physiotherapist is associated with the patient.",
        "operationId": "UserController_associatePatientToPhysiotherapist",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePhysiotherapistPatientAssociationDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhysiotherapistPatientAssociation"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Users"
        ]
      }
    },
    "/users/patients/{patientId}/physiotherapists": {
      "get": {
        "description": "Retrieves a list of all physiotherapists (admin) associated with a specific patient (user). It provides detailed information about all physiotherapists associated with the patient.",
        "operationId": "UserController_getPhysiotherapistsForPatient",
        "parameters": [
          {
            "name": "patientId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAssociationResponsePaginatedDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Users"
        ]
      }
    },
    "/users/physiotherapists/{physiotherapistId}/patients": {
      "get": {
        "description": "Retrieves a list of all patients (users) associated with a specific physiotherapist (admin). It provides detailed information about all patients associated with the physiotherapist.",
        "operationId": "UserController_getPatientsForPhysiotherapist",
        "parameters": [
          {
            "name": "physiotherapistId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAssociationResponsePaginatedDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Users"
        ]
      }
    },
    "/users/assigned/{associationId}": {
      "delete": {
        "description": "Dissociates a physiotherapist (admin) from a patient (user). It ensures that the physiotherapist is dissociated from the patient.",
        "operationId": "UserController_dissociatePhysiotherapistPatient",
        "parameters": [
          {
            "name": "associationId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Users"
        ]
      }
    },
    "/users/invite": {
      "post": {
        "description": "Generates an invite code for invite a new user. It ensures that the invite code is generated and ready for use.",
        "operationId": "UserController_generateInvite",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserInviteDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInvite"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Users"
        ]
      }
    },
    "/users/invite/bulk": {
      "post": {
        "operationId": "UserController_createUsersBulk",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBulkInvitesExtendedDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/users/invite/{inviteId}/resend": {
      "post": {
        "operationId": "UserController_resendInvite",
        "parameters": [
          {
            "name": "inviteId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/users/invite/{id}": {
      "patch": {
        "description": "Generates an invite code for invite a new user. It ensures that the invite code is generated and ready for use.",
        "operationId": "UserController_updateInvite",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserInviteDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInvite"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Users"
        ]
      },
      "delete": {
        "description": "Generates an invite code for invite a new user. It ensures that the invite code is generated and ready for use.",
        "operationId": "UserController_deleteInvite",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInvite"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Users"
        ]
      }
    },
    "/users/associate-patient-physiotherapist/{id}/show-popup": {
      "patch": {
        "description": "Updates details of a specific user (patient). Only the fields that need to be updated should be provided.",
        "operationId": "UserController_updateShowPopup",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateShowPopupDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Users"
        ]
      }
    },
    "/users/daily-activity-distribution/{userId}": {
      "post": {
        "operationId": "UserController_createDailyActivityDistribution",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDailyActivityDistributionDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DailyActivityDistribution"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Users"
        ]
      },
      "patch": {
        "operationId": "UserController_updateDailyActivityDistribution",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDailyActivityDistributionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DailyActivityDistribution"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Users"
        ]
      },
      "get": {
        "operationId": "UserController_getDailyActivityDistribution",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DailyActivityDistribution"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/users/{userId}/weight": {
      "post": {
        "operationId": "UserController_createOrUpdateWeight",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWeightExtendedDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Weight"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/users/functional-goals/{userId}": {
      "post": {
        "operationId": "UserController_createFunctionalGoals",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFunctionalGoalsDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FunctionalGoals"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Users"
        ]
      },
      "patch": {
        "operationId": "UserController_updateFunctionalGoals",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFunctionalGoalsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FunctionalGoals"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/users/{userId}/wellness-check": {
      "patch": {
        "operationId": "UserController_updateWellnessCheck",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/users/{userId}/pre-existing-conditions/agree": {
      "patch": {
        "operationId": "UserController_agreeToPreExistingConditions",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profile"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/rom/patients/{patientId}/results": {
      "get": {
        "description": "Retrieves all range of motion evaluation results for a specific patient.",
        "operationId": "RomController_getAllPatientResults",
        "parameters": [
          {
            "name": "patientId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "strapiOmniRomExerciseId",
            "required": false,
            "in": "query",
            "description": "strapiOmniRomExerciseId",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "initialDate",
            "required": false,
            "in": "query",
            "description": "Initial date",
            "schema": {
              "example": "2020-01-01",
              "type": "string"
            }
          },
          {
            "name": "finalDate",
            "required": false,
            "in": "query",
            "description": "Final date",
            "schema": {
              "example": "2020-01-02",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RomPatientResultDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "OmniROM"
        ]
      }
    },
    "/rom/sessions/{userId}/all": {
      "get": {
        "description": "Retrieves all range of motion evaluation sessions for a specific user.",
        "operationId": "RomController_getAllSessionsByUser",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RomUserSessionExtendedResponsePaginatedDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "OmniROM"
        ]
      }
    },
    "/rom/sessions/{userId}": {
      "get": {
        "description": "Retrieves the most recent range of motion evaluation session for a specific user.",
        "operationId": "RomController_getLastUserSession",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendedRomSessionDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "OmniROM"
        ]
      }
    },
    "/rom/patients/{patientId}/results/sessions": {
      "get": {
        "description": "Retrieves the range of motion evaluation results for all sessions of a specific patient.",
        "operationId": "RomController_getAllPatientResultsBySession",
        "parameters": [
          {
            "name": "patientId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "strapiOmniRomExerciseId",
            "required": false,
            "in": "query",
            "description": "strapiOmniRomExerciseId",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "initialDate",
            "required": false,
            "in": "query",
            "description": "Initial date",
            "schema": {
              "example": "2020-01-01",
              "type": "string"
            }
          },
          {
            "name": "finalDate",
            "required": false,
            "in": "query",
            "description": "Final date",
            "schema": {
              "example": "2020-01-02",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExtendedRomSessionDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "OmniROM"
        ]
      }
    },
    "/rom/sessions/status/{status}/users": {
      "get": {
        "description": "Retrieves all users with range of motion evaluation sessions of a specific status.",
        "operationId": "RomController_getAllSessionsByStatus",
        "parameters": [
          {
            "name": "status",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RomUserSessionResponsePaginatedByUserDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "OmniROM"
        ]
      }
    },
    "/rom/sessions/{sessionId}/status": {
      "patch": {
        "description": "Updates the status of a specific range of motion evaluation session.",
        "operationId": "RomController_updateSessionStatus",
        "parameters": [
          {
            "name": "sessionId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RomUpdateSessionStatusDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RomSessionDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "OmniROM"
        ]
      }
    },
    "/rom/session/{sessionId}": {
      "get": {
        "description": "Retrieves the current status of a specific range of motion evaluation session.",
        "operationId": "RomController_getSessionById",
        "parameters": [
          {
            "name": "sessionId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendedRomSessionDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "OmniROM"
        ]
      }
    },
    "/rom/sessions": {
      "post": {
        "description": "Creates a new session and closes previously opened session.",
        "operationId": "RomController_createSession",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRomSessionDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RomSession"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "OmniROM"
        ]
      }
    },
    "/rom/sessions/programs/{programId}": {
      "get": {
        "description": "Retrieves all sessions for a specific program.",
        "operationId": "RomController_getAllSessionByProgram",
        "parameters": [
          {
            "name": "programId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RomUserSessionExtendedResponsePaginatedDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "OmniROM"
        ]
      }
    },
    "/rom/sessions/{sessionId}": {
      "patch": {
        "description": "Closes previously opened session.",
        "operationId": "RomController_updateSession",
        "parameters": [
          {
            "name": "sessionId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRomSessionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RomSession"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "OmniROM"
        ]
      }
    },
    "/rom/sessions/{sessionId}/complete": {
      "patch": {
        "description": "Closes previously opened session.",
        "operationId": "RomController_completeSession",
        "parameters": [
          {
            "name": "sessionId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RomSession"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "OmniROM"
        ]
      }
    },
    "/rom/sessions/patient-results": {
      "post": {
        "description": "Creates and saves patient results performed by user (patient).",
        "operationId": "RomController_savePatientResults",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRomPatientResultDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RomPatientResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "OmniROM"
        ]
      }
    },
    "/rom/sessions/patient-results/{resultId}": {
      "patch": {
        "description": "Closes previously opened session.",
        "operationId": "RomController_updatePatientResults",
        "parameters": [
          {
            "name": "resultId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExtendedUpdateRomPatientResultDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RomPatientResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "OmniROM"
        ]
      }
    },
    "/rom/library": {
      "post": {
        "description": "Adds a new exercise to the exercise library.",
        "operationId": "RomController_createRomLibrary",
        "parameters": [],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendedRomLibraryDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "OmniROM"
        ]
      },
      "get": {
        "description": "Retrieves all exercise from exercise library.",
        "operationId": "RomController_getRomLibrary",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendedRomLibraryPaginatedDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "OmniROM"
        ]
      }
    },
    "/rom/library/{libraryId}": {
      "get": {
        "description": "Retrieves a rom library by id.",
        "operationId": "RomController_getRomLibraryById",
        "parameters": [
          {
            "name": "libraryId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendedRomLibraryDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "OmniROM"
        ]
      },
      "patch": {
        "description": "Adds a new exercise to the exercise library.",
        "operationId": "RomController_updateRomLibrary",
        "parameters": [
          {
            "name": "libraryId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRomLibraryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendedRomLibraryDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "OmniROM"
        ]
      },
      "delete": {
        "description": "Delete library.",
        "operationId": "RomController_deleteRomLibrary",
        "parameters": [
          {
            "name": "libraryId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RomLibrary"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "OmniROM"
        ]
      }
    },
    "/rom/programs": {
      "post": {
        "description": "Creates a program with custom exercises.",
        "operationId": "RomController_createRomProgram",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRomProgramDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendedRomProgramDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "OmniROM"
        ]
      },
      "get": {
        "description": "Retrieves all exercise programs for a specific user.",
        "operationId": "RomController_getAllRomProgramsByUserId",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendedRomProgramPaginatedDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "OmniROM"
        ]
      }
    },
    "/rom/programs/patients/{patientId}": {
      "get": {
        "description": "Retrieves all exercise programs for a specific user.",
        "operationId": "RomController_getAllRomProgramsByPatientId",
        "parameters": [
          {
            "name": "patientId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "example": "any word",
              "type": "string"
            }
          },
          {
            "name": "sessions",
            "required": false,
            "in": "query",
            "schema": {
              "nullable": true,
              "example": "true",
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendedRomProgramPaginatedDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "OmniROM"
        ]
      }
    },
    "/rom/programs/{programId}": {
      "get": {
        "description": "Retrieves all exercise programs for a specific user.",
        "operationId": "RomController_getRomProgramById",
        "parameters": [
          {
            "name": "programId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendedRomProgramDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "OmniROM"
        ]
      },
      "patch": {
        "description": "Creates a program with custom exercises.",
        "operationId": "RomController_updateRomProgram",
        "parameters": [
          {
            "name": "programId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExtendedUpdateRomProgramDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendedRomProgramDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "OmniROM"
        ]
      },
      "delete": {
        "description": "Delete a Rom Program.",
        "operationId": "RomController_deleteRomProgram",
        "parameters": [
          {
            "name": "programId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RomProgramDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "OmniROM"
        ]
      }
    },
    "/rom/sessions/{sessionId}/pdf": {
      "post": {
        "operationId": "RomController_generatePdfUrlAndSaveOnAzure",
        "parameters": [
          {
            "name": "sessionId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GeneratePdfUrlAndSaveOnAzureDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "OmniROM"
        ]
      }
    },
    "/activity-stream/history/unread": {
      "get": {
        "description": "Fetches all unread entries from the activity stream. This endpoint highlights the events and communications that have not yet been viewed by the user or the physiotherapist.",
        "operationId": "ActivityStreamHistoryController_getHistoryUnread",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ActivityStreamUnreadMessagesResponseDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Activity Stream History"
        ]
      }
    },
    "/activity-stream/history/{userId}": {
      "get": {
        "description": "Retrieves the entire activity stream history for a specific user. This provides a comprehensive view of all events and interactions related to the patient.",
        "operationId": "ActivityStreamHistoryController_getAllHistories",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "description": "2024-01-31",
            "schema": {}
          },
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "description": "2024-01-01",
            "schema": {}
          },
          {
            "name": "endCursor",
            "required": false,
            "in": "query",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityStreamHistoryPaginatedResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Activity Stream History"
        ]
      }
    },
    "/activity-stream/history/read/{userId}": {
      "patch": {
        "description": "Marks all entries in the activity stream history as read for a specific user. This updates the status of the entries to indicate they have been reviewed.",
        "operationId": "ActivityStreamHistoryController_markHistoryAsRead",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "History marked as read"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Activity Stream History"
        ]
      }
    },
    "/activity-stream/{id}": {
      "get": {
        "description": "Retrieves the details of a specific activity stream entry based on its unique identifier. This provides a detailed view of the event, message, or evaluation.",
        "operationId": "ActivityStreamController_getActivityStreamById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityStreamDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Activity Stream"
        ]
      }
    },
    "/activity-stream/evaluation": {
      "post": {
        "description": "Creates a new evaluation entry in the activity stream, linking various session and result IDs, notes, and feedback to a specific user and physiotherapist. This helps in documenting and assessing the patient's progress and activities comprehensively.",
        "operationId": "ActivityStreamEvaluationController_createEvaluation",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityStreamCreateEvaluationDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityStreamEvaluationDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Activity Stream Evaluation"
        ]
      }
    },
    "/activity-stream/evaluation/{id}": {
      "get": {
        "description": "Retrieves a specific evaluation entry from the activity stream by its unique ID, providing detailed information about the patient's activities, progress, and feedback for that particular evaluation.",
        "operationId": "ActivityStreamEvaluationController_getEvaluationById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityStreamEvaluationDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Activity Stream Evaluation"
        ]
      }
    },
    "/activity-stream/feedback": {
      "post": {
        "description": "Creates a new feedback entry in the activity stream, linking it to a specific user and physiotherapist. The feedback can include notes, video content, and processing status, providing comprehensive documentation of patient feedback related to ROM sessions, programs, surveys, and evaluations.",
        "operationId": "ActivityStreamFeedbackController_createFeedback",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityStreamCreateFeedbackDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityStreamFeedbackDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Activity Stream Feedback"
        ]
      }
    },
    "/activity-stream/feedback/{id}": {
      "get": {
        "description": "Retrieves a specific feedback entry from the activity stream by its unique ID. This provides detailed information about the patient's feedback, including associated notes, video content, and the status of processing for that particular feedback entry.",
        "operationId": "ActivityStreamFeedbackController_getFeedbackById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityStreamFeedbackDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Activity Stream Feedback"
        ]
      }
    },
    "/activity-stream/post": {
      "post": {
        "description": "Creates a new post in the activity stream. The post includes details such as the user ID, physiotherapist ID, images, videos, a message, and the activity stream ID. This allows for multimedia communication and updates between the patient and the physiotherapist.",
        "operationId": "ActivityStreamPostController_createPost",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityStreamCreatePostDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityStreamPostDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Activity Stream Post"
        ]
      }
    },
    "/activity-stream/post/{id}": {
      "get": {
        "description": "Retrieves a specific post from the activity stream by its ID. This endpoint provides access to the content of the post, including any attached images, videos, and the message, facilitating review and communication between the patient and the physiotherapist.",
        "operationId": "ActivityStreamPostController_getPostById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityStreamPostDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Activity Stream Post"
        ]
      }
    },
    "/rom/mobility-score/{userId}": {
      "get": {
        "operationId": "MobilityScoreController_getAll",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MobilityScorePaginatedDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "OmniROM"
        ]
      }
    },
    "/rom/program-templates": {
      "post": {
        "description": "Creates a custom rom template. This template can be reused for multiple patients, simplifying the creation of custom rom.",
        "operationId": "RomTemplateController_createRomTemplate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRomProgramTemplateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendedTemplateDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "OmniROM"
        ]
      },
      "get": {
        "description": "Retrieves a list of all available custom rom templates, providing an overview of predefined exercise custom rom that can be assigned to patients.",
        "operationId": "RomTemplateController_getRomAllTemplatesByClient",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "example": "any word",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendedRomTemplatePaginatedDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "OmniROM"
        ]
      }
    },
    "/rom/program-templates/{programTemplateId}": {
      "get": {
        "description": "Retrieves a list of all available custom rom templates, providing an overview of predefined exercise custom rom that can be assigned to patients.",
        "operationId": "RomTemplateController_getRomTemplateById",
        "parameters": [
          {
            "name": "programTemplateId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendedTemplateDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "OmniROM"
        ]
      },
      "patch": {
        "description": "Retrieves a list of all available custom rom templates, providing an overview of predefined exercise custom rom that can be assigned to patients.",
        "operationId": "RomTemplateController_updateRomTemplate",
        "parameters": [
          {
            "name": "programTemplateId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExtendedUpdateTemplateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendedTemplateDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "OmniROM"
        ]
      },
      "delete": {
        "description": "Retrieves a list of all available custom rom templates, providing an overview of predefined exercise custom rom that can be assigned to patients.",
        "operationId": "RomTemplateController_deleteRomTemplate",
        "parameters": [
          {
            "name": "programTemplateId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RomProgramTemplate"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "OmniROM"
        ]
      }
    },
    "/program/generate": {
      "post": {
        "description": "Generates a new exercise program for a patient based on AI recommendations. It considers the patient's evaluation results and OmniROM evaluation results.",
        "operationId": "ProgramController_generateProgram",
        "parameters": [],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Program"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Programs"
        ]
      }
    },
    "/program": {
      "post": {
        "description": "Creates a new exercise program.",
        "operationId": "ProgramController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProgramExtendedDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Program"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Programs"
        ]
      }
    },
    "/program/{userId}": {
      "get": {
        "description": "Retrieves all exercise programs for a specific user (patient).",
        "operationId": "ProgramController_getAllByUser",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "example": "any word",
              "type": "string"
            }
          },
          {
            "name": "sessions",
            "required": false,
            "in": "query",
            "schema": {
              "nullable": true,
              "example": "true",
              "type": "boolean"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendedProgramPaginatedDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Programs"
        ]
      }
    },
    "/program/exercises/{exerciseId}": {
      "patch": {
        "description": "Updates details of a specific exercise within a program.",
        "operationId": "ProgramController_updateProgramExercise",
        "parameters": [
          {
            "name": "exerciseId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProgramExerciseDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramExercise"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Programs"
        ]
      }
    },
    "/program/{programId}": {
      "patch": {
        "description": "",
        "operationId": "ProgramController_updateProgram",
        "parameters": [
          {
            "name": "programId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProgramCustomDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Program"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Programs"
        ]
      }
    },
    "/program/{programId}/exercises": {
      "post": {
        "description": "Adds a new exercise to an existing program.",
        "operationId": "ProgramController_addExerciseToProgram",
        "parameters": [
          {
            "name": "programId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProgramExerciseDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramExercise"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Programs"
        ]
      }
    },
    "/program/{programId}/exercises/order": {
      "patch": {
        "description": "Updates the order of exercises within a specific program.",
        "operationId": "ProgramController_updateProgramExercisesOrder",
        "parameters": [
          {
            "name": "programId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProgramExercisesOrderDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": ""
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Programs"
        ]
      }
    },
    "/program/templates/{templateId}/users/{userId}": {
      "post": {
        "description": "Creates a new exercise program for a specific user based on a template.",
        "operationId": "ProgramController_createFromTemplate",
        "parameters": [
          {
            "name": "templateId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Program"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Programs"
        ]
      }
    },
    "/program/sessions": {
      "post": {
        "description": "Creates a new session for a program, tracking the patient's exercise session.",
        "operationId": "ProgramController_createSession",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProgramSessionDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramSession"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Programs"
        ]
      }
    },
    "/program/sessions/results": {
      "post": {
        "description": "Submits the results of a program session, including details of exercises performed and patient feedback.",
        "operationId": "ProgramController_createSessionResult",
        "parameters": [],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramSessionResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Programs"
        ]
      }
    },
    "/program/{programId}/sessions": {
      "get": {
        "description": "Retrieves all sessions for a specific program.",
        "operationId": "ProgramController_getAllSessionsByProgram",
        "parameters": [
          {
            "name": "programId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "completed",
            "required": false,
            "in": "query",
            "schema": {
              "example": "true",
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendedProgramSessionPaginatedDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Programs"
        ]
      }
    },
    "/program/{programId}/exercises/{exerciseId}/sessions": {
      "get": {
        "description": "Retrieves all sessions for a specific exercise within a program.",
        "operationId": "ProgramController_getAllExercisesResultsByProgram",
        "parameters": [
          {
            "name": "programId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "exerciseId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendedProgramSessionResultPaginatedDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Programs"
        ]
      }
    },
    "/program/exercises/library": {
      "post": {
        "description": "Adds a new exercise to the exercise library.",
        "operationId": "ProgramController_createExerciseLibrary",
        "parameters": [],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExerciseLibrary"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Programs"
        ]
      }
    },
    "/program/exercises/library/physioterapists/{physioterapistId}": {
      "get": {
        "description": "Retrieves all exercises in the library added by a specific Physical Therapist.",
        "operationId": "ProgramController_getExercisesLibrary",
        "parameters": [
          {
            "name": "physioterapistId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "example": "any word",
              "type": "string"
            }
          },
          {
            "name": "bodyRegionIds",
            "required": false,
            "in": "query",
            "schema": {
              "example": [
                1,
                2
              ],
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          },
          {
            "name": "exerciseCategoriesIds",
            "required": false,
            "in": "query",
            "schema": {
              "example": [
                1,
                2
              ],
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          },
          {
            "name": "jointsIds",
            "required": false,
            "in": "query",
            "schema": {
              "example": [
                1,
                2
              ],
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          },
          {
            "name": "functionalGoalsIds",
            "required": false,
            "in": "query",
            "schema": {
              "example": [
                1,
                2
              ],
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          },
          {
            "name": "title",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendedExerciseLibraryPaginatedDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Programs"
        ]
      }
    },
    "/program/library/exercises": {
      "patch": {
        "description": "Updates the details of a specific exercise in the exercise library.",
        "operationId": "ProgramController_updateExerciseLibrary",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProgramExerciseLibraryUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExerciseLibrary"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Programs"
        ]
      }
    },
    "/program/exercises/library/{exerciseId}": {
      "delete": {
        "description": "Deletes a specific exercise from the exercise library. The exercise is identified by its unique identifier.",
        "operationId": "ProgramController_deleteVideoFromLibrary",
        "parameters": [
          {
            "name": "exerciseId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExerciseLibrary"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Programs"
        ]
      }
    },
    "/program/sessions/status/{status}/users": {
      "get": {
        "description": "Retrieves a list of users based on the status of their program sessions. This helps in tracking user progress and session completions.",
        "operationId": "ProgramController_getSessionsByStatus",
        "parameters": [
          {
            "name": "status",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendedUserResponsePaginatedDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Programs"
        ]
      }
    },
    "/program/sessions/{sessionId}/status": {
      "patch": {
        "description": "Updates the status of a specific program session. This is used to mark sessions as completed, pending, or in-progress based on the session identifier.",
        "operationId": "ProgramController_updateSessionStatus",
        "parameters": [
          {
            "name": "sessionId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramSession"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Programs"
        ]
      }
    },
    "/program/enrollments/{userId}": {
      "post": {
        "description": "Enrolls a user in a specific program. This associates a user with a program, allowing them to start following the prescribed exercise regimen.",
        "operationId": "ProgramController_requestEnrollment",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserToolStatus"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Programs"
        ]
      }
    },
    "/program/enrollments": {
      "get": {
        "description": "Retrieves a list of all program enrollments. This includes information on which users are enrolled in which programs, useful for tracking participation and engagement.",
        "operationId": "ProgramController_getRequestedEnrollment",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramRequestEnrollmentResponsePaginatedDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Programs"
        ]
      }
    },
    "/program/sessions/{sessionId}/complete": {
      "patch": {
        "description": "Marks a specific program session as complete. This is used to indicate that a user has finished the session as prescribed.",
        "operationId": "ProgramController_completeSession",
        "parameters": [
          {
            "name": "sessionId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramSession"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Programs"
        ]
      }
    },
    "/program/sessions/{sessionId}": {
      "get": {
        "operationId": "ProgramController_getSessionsById",
        "parameters": [
          {
            "name": "sessionId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramSession"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Programs"
        ]
      }
    },
    "/program/get/{programId}": {
      "get": {
        "operationId": "ProgramController_getProgramById",
        "parameters": [
          {
            "name": "programId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Program"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Programs"
        ]
      }
    },
    "/program/{programId}/users/{userId}": {
      "delete": {
        "operationId": "ProgramController_deleteProgramFromUser",
        "parameters": [
          {
            "name": "programId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Program"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Programs"
        ]
      }
    },
    "/program/sessions/{sessionId}/results/{resultId}": {
      "patch": {
        "operationId": "ProgramController_updateSessionResult",
        "parameters": [
          {
            "name": "sessionId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resultId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProgramSessionResultDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramSessionResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Programs"
        ]
      }
    },
    "/program/open-ai/users/{userId}": {
      "get": {
        "description": "Retrieves data specific to a user, including their AI-generated programs, exercises, and other related information. This endpoint provides a detailed view of the user's interactions and usage of AI-assisted features.",
        "operationId": "OpenAiController_getProgramAi",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Program"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "OpenAi"
        ]
      }
    },
    "/program/open-ai": {
      "post": {
        "description": "Creates a new AI-assisted entry or program based on the provided data. This endpoint leverages AI capabilities to generate personalized content, programs, or analyses for the user.",
        "operationId": "OpenAiController_generateProgram",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProgramAiDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Program"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "OpenAi"
        ]
      }
    },
    "/program/program-template": {
      "post": {
        "description": "Creates a new program template with a specified duration and a list of exercises. This template can be reused for multiple patients, simplifying the creation of exercise programs.",
        "operationId": "ProgramTemplateController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProgramTemplateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramTemplate"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Program Template"
        ]
      }
    },
    "/program/program-template/list": {
      "get": {
        "description": "Retrieves a list of all available program templates, providing an overview of predefined exercise programs that can be assigned to patients.",
        "operationId": "ProgramTemplateController_getAllByClient",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "example": "any word",
              "type": "string"
            }
          },
          {
            "name": "bodyRegionIds",
            "required": false,
            "in": "query",
            "schema": {
              "example": [
                1,
                2
              ],
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          },
          {
            "name": "exerciseCategoriesIds",
            "required": false,
            "in": "query",
            "schema": {
              "example": [
                1,
                2
              ],
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          },
          {
            "name": "jointsIds",
            "required": false,
            "in": "query",
            "schema": {
              "example": [
                1,
                2
              ],
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          },
          {
            "name": "functionalGoalsIds",
            "required": false,
            "in": "query",
            "schema": {
              "example": [
                1,
                2
              ],
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramTemplateResponsePaginatedDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Program Template"
        ]
      }
    },
    "/program/program-template/{programId}": {
      "patch": {
        "description": "Updates an existing program template identified by its unique ID, allowing modifications to the template's duration, exercises, and other details.",
        "operationId": "ProgramTemplateController_updateProgram",
        "parameters": [
          {
            "name": "programId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProgramTemplateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramTemplate"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Program Template"
        ]
      }
    },
    "/program/program-template/{programId}/exercises": {
      "post": {
        "description": "Adds new exercises to an existing program template, enabling further customization and expansion of the exercise program.",
        "operationId": "ProgramTemplateController_addExerciseToProgram",
        "parameters": [
          {
            "name": "programId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProgramExerciseTemplateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramExerciseTemplate"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Program Template"
        ]
      }
    },
    "/program/program-template/exercises/{exerciseId}": {
      "patch": {
        "description": "Updates specific exercises within a program template, allowing adjustments to the number of reps, sets, order, and other exercise parameters.",
        "operationId": "ProgramTemplateController_updateProgramExercise",
        "parameters": [
          {
            "name": "exerciseId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProgramExerciseTemplateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramExerciseTemplate"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Program Template"
        ]
      }
    },
    "/settings": {
      "post": {
        "description": "Creates new settings for a client, including OpenAI API key information and activation status. This endpoint allows for the initial configuration and integration setup.",
        "operationId": "SettingsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateClientSettingsDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientSettingsDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Settings"
        ]
      },
      "get": {
        "description": "Retrieves the current settings for all clients, providing an overview of configuration details such as API keys and their statuses.",
        "operationId": "SettingsController_getSettings",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientSettingsDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Settings"
        ]
      }
    },
    "/settings/{settingsId}": {
      "patch": {
        "description": "Updates existing settings identified by their unique identifier. This endpoint enables modifications to API key information, activation status, and other configuration details.",
        "operationId": "SettingsController_updateSettings",
        "parameters": [
          {
            "name": "settingsId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateClientSettingsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientSettingsDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Settings"
        ]
      }
    },
    "/settings/templates/email": {
      "post": {
        "operationId": "SettingsController_createOrUpdateEmailTemplate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEmailTemplateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailTemplate"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Settings"
        ]
      },
      "get": {
        "operationId": "SettingsController_getEmailTemplate",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailTemplate"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Settings"
        ]
      }
    },
    "/settings/templates/invite": {
      "post": {
        "operationId": "SettingsController_createOrUpdateInviteTemplate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInviteTemplateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InviteTemplate"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Settings"
        ]
      },
      "get": {
        "operationId": "SettingsController_getInviteTemplate",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InviteTemplate"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Settings"
        ]
      }
    },
    "/settings/templates/email/rom": {
      "get": {
        "operationId": "SettingsController_getRomEmailTemplate",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RomEmailTemplate"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Settings"
        ]
      },
      "post": {
        "operationId": "SettingsController_createOrUpdateRomEmailTemplate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRomEmailTemplateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RomEmailTemplate"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Settings"
        ]
      }
    },
    "/settings/themes": {
      "post": {
        "operationId": "SettingsController_createOrUpdateTheme",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrUpdateThemeDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThemeDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Settings"
        ]
      },
      "get": {
        "operationId": "SettingsController_getTheme",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThemeDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Settings"
        ]
      }
    },
    "/settings/network": {
      "post": {
        "operationId": "SettingsController_createOrUpdateNetworkSettings",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrUpdateNetworkSettingsDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkSettingsDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Settings"
        ]
      },
      "get": {
        "operationId": "SettingsController_getNetworkSettings",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkSettingsDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Settings"
        ]
      }
    },
    "/settings/premium-plans/status": {
      "post": {
        "operationId": "SettingsController_createOrUpdatePremiumPlansStatusSettings",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrUpdatePremiumPlanStatusSettingsDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PremiumPlanStatusDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Settings"
        ]
      },
      "get": {
        "operationId": "SettingsController_getPremiumPlansStatusSettings",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PremiumPlanStatusDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Settings"
        ]
      }
    },
    "/settings/plans": {
      "get": {
        "operationId": "PlansSettingsController_getPlanSettings",
        "parameters": [
          {
            "name": "plan",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlansSettingsDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Settings"
        ]
      },
      "post": {
        "operationId": "PlansSettingsController_createOrUpdatePlanSettings",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePlansSettingsDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlansSettingsDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Settings"
        ]
      }
    },
    "/settings/functional-goals": {
      "get": {
        "operationId": "FunctionalGoalsSettingsController_getPlanSettings",
        "parameters": [
          {
            "name": "functionalGoalId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FunctionalGoalsSettingsDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Settings"
        ]
      },
      "post": {
        "operationId": "FunctionalGoalsSettingsController_createOrUpdatePlanSettings",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFunctionalGoalsSettingsExtendedDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FunctionalGoalsSettingsDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Settings"
        ]
      }
    },
    "/settings/pre-existing-conditions": {
      "get": {
        "operationId": "PreExistingConditionsSettingsController_getPlanSettings",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreExistingConditionsSettingsDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Settings"
        ]
      },
      "post": {
        "operationId": "PreExistingConditionsSettingsController_createOrUpdatePlanSettings",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePreExistingConditionsSettingsDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreExistingConditionsSettingsDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Settings"
        ]
      }
    },
    "/evaluation": {
      "post": {
        "description": "Initiates a new evaluation for a patient, collecting comprehensive data on their pain points, health signs, and medical history.",
        "operationId": "EvaluationController_createEvaluation",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EvaluationCreateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EvaluationSessionDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Evaluation"
        ]
      }
    },
    "/evaluation/{sessionId}": {
      "patch": {
        "description": "Updates an existing evaluation session with new or revised information.",
        "operationId": "EvaluationController_updateSession",
        "parameters": [
          {
            "name": "sessionId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EvaluationUpdateSessionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EvaluationSessionDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Evaluation"
        ]
      }
    },
    "/evaluation/{userId}": {
      "get": {
        "description": "Retrieves the evaluation data for a specific user, including their pain assessments, health signs, and medical history.",
        "operationId": "EvaluationController_getEvaluationSessionsByUserId",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EvaluationResponsePaginatedDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Evaluation"
        ]
      }
    },
    "/evaluation/sessions/{evaluationId}": {
      "get": {
        "description": "",
        "operationId": "EvaluationController_getEvaluationSessionsById",
        "parameters": [
          {
            "name": "evaluationId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EvaluationResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Evaluation"
        ]
      }
    },
    "/evaluation/sessions/status/{status}/users": {
      "get": {
        "description": "Retrieves users based on the status of their evaluation sessions, aiding in tracking and managing patient evaluations.",
        "operationId": "EvaluationController_getAllResultsByStatus",
        "parameters": [
          {
            "name": "status",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EvaluationUserSessionResponsePaginatedByUserDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Evaluation"
        ]
      }
    },
    "/evaluation/sessions/{sessionId}/status": {
      "patch": {
        "description": "Updates the status of a specific evaluation session, such as marking it as completed or in-progress.",
        "operationId": "EvaluationController_updateSessionStatus",
        "parameters": [
          {
            "name": "sessionId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EvaluationSession"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Evaluation"
        ]
      }
    },
    "/reports": {
      "post": {
        "description": "Generates a new report based on specified parameters, such as user activities and tool usage within a defined date range.",
        "operationId": "ReportsController_createReport",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReportsDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportsDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Reports"
        ]
      }
    },
    "/reports/create": {
      "post": {
        "description": "Creates a detailed report, allowing customization of included data such as ROM sessions, program sessions, evaluation sessions, and survey results.",
        "operationId": "ReportsController_createReportByFeatureAndDate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReportsFeatureDateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportsDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Reports"
        ]
      }
    },
    "/reports/users/{userId}": {
      "get": {
        "description": "Retrieves reports specific to a particular user, detailing their interactions and usage of system tools.",
        "operationId": "ReportsController_getAll",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "example": "any word",
              "type": "string"
            }
          },
          {
            "name": "sort",
            "required": true,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Sort"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportsResponsePaginatedDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Reports"
        ]
      }
    },
    "/reports/{reportId}": {
      "get": {
        "description": "Fetches a specific report by its unique identifier, providing detailed information about the user's system usage and activities.",
        "operationId": "ReportsController_getOne",
        "parameters": [
          {
            "name": "reportId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendedReportsDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Reports"
        ]
      },
      "patch": {
        "description": "Updates an existing report with new data or changes to previously included information.",
        "operationId": "ReportsController_updateReport",
        "parameters": [
          {
            "name": "reportId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReportsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendedReportsDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Reports"
        ]
      },
      "delete": {
        "description": "Deletes a specific report identified by its unique identifier, removing it from the system.",
        "operationId": "ReportsController_deleteReport",
        "parameters": [
          {
            "name": "reportId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportsDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Reports"
        ]
      }
    },
    "/reports/notes/{reportId}": {
      "patch": {
        "description": "Updates notes for existing report and appends new notes to previously included notes.",
        "operationId": "ReportsController_updateReportNotes",
        "parameters": [
          {
            "name": "reportId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReportNotesExtendedDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportsDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Reports"
        ]
      }
    },
    "/reports/omnirom/csv": {
      "get": {
        "operationId": "ReportsController_omniRomeCSV",
        "parameters": [
          {
            "name": "startDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Reports"
        ]
      }
    },
    "/reports/letsmove/csv": {
      "get": {
        "operationId": "ReportsController_letsMoveCSV",
        "parameters": [
          {
            "name": "startDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Reports"
        ]
      }
    },
    "/reports/aggregate/excel": {
      "get": {
        "operationId": "ReportsController_aggregateCSV",
        "parameters": [
          {
            "name": "startDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Reports"
        ]
      }
    },
    "/survey": {
      "post": {
        "description": "Creates a new survey with customizable questions and options, which can be manually tailored by the PT. The survey can also include images and instructions, and be saved as a template for future use.",
        "operationId": "SurveyController_createSurvey",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSurveyCustomDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Survey"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Surveys"
        ]
      }
    },
    "/survey/{userId}": {
      "get": {
        "description": "Retrieves all surveys associated with a specific user, providing an overview of their survey history and data collected.",
        "operationId": "SurveyController_getAllByUser",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "example": "any word",
              "type": "string"
            }
          },
          {
            "name": "approved",
            "required": false,
            "in": "query",
            "schema": {
              "nullable": true,
              "example": "true",
              "type": "boolean"
            }
          },
          {
            "name": "sessions",
            "required": false,
            "in": "query",
            "schema": {
              "nullable": true,
              "example": "true",
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SurveyResponsePaginatedDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Surveys"
        ]
      }
    },
    "/survey/{surveyId}": {
      "patch": {
        "description": "Updates an existing survey identified by its unique ID, allowing modifications to the survey's questions, options, and other details.",
        "operationId": "SurveyController_updateSurvey",
        "parameters": [
          {
            "name": "surveyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "delete",
            "required": false,
            "in": "query",
            "schema": {
              "nullable": true,
              "example": "true",
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSurveyCustomDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Survey"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Surveys"
        ]
      },
      "delete": {
        "description": "",
        "operationId": "SurveyController_deleteSurveyById",
        "parameters": [
          {
            "name": "surveyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Survey"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Surveys"
        ]
      }
    },
    "/survey/session/{surveyId}": {
      "post": {
        "description": "Creates a new survey session for a specific survey ID, initiating the survey for a patient to complete.",
        "operationId": "SurveyController_saveSurveyResult",
        "parameters": [
          {
            "name": "surveyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSurveyResultDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SurveyResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Surveys"
        ]
      }
    },
    "/survey/session/{userId}": {
      "get": {
        "description": "Fetches all survey sessions associated with a specific user, detailing their participation and responses in various surveys.",
        "operationId": "SurveyController_getSurveyResultsByUser",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "example": "any word",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SurveyResultsResponsePaginatedDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Surveys"
        ]
      }
    },
    "/survey/get/{surveyId}": {
      "get": {
        "description": "Retrieves the details of a specific survey by its unique identifier, including its questions, options, and other configuration details.",
        "operationId": "SurveyController_getSurveyById",
        "parameters": [
          {
            "name": "surveyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Survey"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Surveys"
        ]
      }
    },
    "/survey/result/{surveyResultId}": {
      "get": {
        "description": "Obtains the results of a specific survey session, providing insights into the patient's responses and feedback.",
        "operationId": "SurveyController_getSurveyResultById",
        "parameters": [
          {
            "name": "surveyResultId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SurveyResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Surveys"
        ]
      }
    },
    "/survey/sessions/{surveyId}": {
      "get": {
        "description": "Lists all sessions for a specific survey, allowing the PT to track patient participation and survey completion.",
        "operationId": "SurveyController_getSurveyResultBySurveyId",
        "parameters": [
          {
            "name": "surveyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "example": "any word",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SurveyResultsResponsePaginatedDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Surveys"
        ]
      }
    },
    "/survey/sessions/status/{status}/users": {
      "get": {
        "description": "Retrieves users based on the status of their survey sessions, helping PTs monitor survey progress and follow-up as needed.",
        "operationId": "SurveyController_getSessionsByStatus",
        "parameters": [
          {
            "name": "status",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SurveySessionsByStatusDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Surveys"
        ]
      }
    },
    "/survey/sessions/{sessionId}/status": {
      "patch": {
        "description": "Updates the status of a specific survey session, such as marking it as completed or in-progress, ensuring accurate tracking and management of survey activities.",
        "operationId": "SurveyController_updateSessionStatus",
        "parameters": [
          {
            "name": "sessionId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SurveyResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Surveys"
        ]
      }
    },
    "/survey/template": {
      "post": {
        "description": "Creates a new survey template, including a title, description, instructions, result feedback, and a set of predefined questions with options. This template can be used to quickly generate surveys for patients.",
        "operationId": "SurveyTemplateController_createSurveyTemplate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSurveyTemplateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SurveyTemplate"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Survey Template"
        ]
      }
    },
    "/survey/template/list": {
      "get": {
        "description": "Retrieves a list of all available survey templates, providing an overview of predefined surveys that can be assigned to patients.",
        "operationId": "SurveyTemplateController_getAllByClient",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "example": "any word",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SurveyTemplateResponsePaginatedDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Survey Template"
        ]
      }
    },
    "/survey/template/{surveyTemplateId}": {
      "patch": {
        "description": "Updates an existing survey template identified by its unique ID, allowing modifications to the template's title, description, questions, and other details.",
        "operationId": "SurveyTemplateController_updateSurvey",
        "parameters": [
          {
            "name": "surveyTemplateId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "delete",
            "required": false,
            "in": "query",
            "schema": {
              "nullable": true,
              "example": "true",
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSurveyTemplateCustomDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SurveyTemplate"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Survey Template"
        ]
      }
    },
    "/posture-analytics/sessions": {
      "post": {
        "description": "Creates a new posture analytics session entry.",
        "operationId": "PostureAnalyticsController_createPostureAnalyticsSession",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePostureAnalyticsSessionDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostureAnalyticsSession"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Posture Analytics"
        ]
      }
    },
    "/posture-analytics": {
      "post": {
        "description": "Creates a new posture analytics entry.",
        "operationId": "PostureAnalyticsController_createPostureAnalytics",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePostureAnalyticsDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostureAnalytics"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Posture Analytics"
        ]
      }
    },
    "/posture-analytics/sessions/users/{userId}": {
      "get": {
        "description": "Retrieves posture analytics sessions by user ID.",
        "operationId": "PostureAnalyticsController_getPostureAnalyticsSessionByUserId",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "schema": {
              "example": "2021-01-01",
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "schema": {
              "example": "2021-01-01",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendedPostureAnalyticsSessionPaginated"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Posture Analytics"
        ]
      }
    },
    "/posture-analytics/{id}": {
      "get": {
        "description": "Retrieves a specific posture analytics entry by ID.",
        "operationId": "PostureAnalyticsController_getPostureAnalyticsById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostureAnalytics"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Posture Analytics"
        ]
      }
    },
    "/posture-analytics/sessions/{id}": {
      "delete": {
        "description": "Deletes a specific posture analytics entry by ID.",
        "operationId": "PostureAnalyticsController_deletePostureAnalyticsSessionById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostureAnalyticsSession"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Posture Analytics"
        ]
      }
    },
    "/posture-analytics/sessions/{sessionId}/status": {
      "patch": {
        "description": "Updates the status of a specific posture session, such as marking it as completed or in-progress.",
        "operationId": "PostureAnalyticsController_updatePostureSessionStatus",
        "parameters": [
          {
            "name": "sessionId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostureAnalyticsSession"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Posture Analytics"
        ]
      }
    },
    "/posture-analytics/report": {
      "post": {
        "description": "Creates a new posture analytics report, which includes detailed assessments of the user\u2019s posture based on the session data.",
        "operationId": "PostureAnalyticsController_createPostureAnalyticsReport",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePostureAnalyticsReportExtendedDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostureAnalyticsReport"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Posture Analytics"
        ]
      }
    },
    "/posture-analytics/users/{userId}/report": {
      "get": {
        "description": "Retrieves a list of all posture analytics reports, providing an overview of posture assessments for users.",
        "operationId": "PostureAnalyticsController_getPostureAnalyticsReport",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostureAnalyticsReportPaginatedDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Posture Analytics"
        ]
      }
    },
    "/posture-analytics/sessions/{sessionId}/report": {
      "get": {
        "description": "Retrieves a list of all posture analytics reports, providing an overview of posture assessments for users.",
        "operationId": "PostureAnalyticsController_getPostureAnalyticsReportBySessionId",
        "parameters": [
          {
            "name": "sessionId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostureAnalyticsReport"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Posture Analytics"
        ]
      }
    },
    "/stats": {
      "get": {
        "description": "Retrieves all stats",
        "operationId": "StatsController_getStatsFromClient",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatsResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Stats"
        ]
      }
    },
    "/plans/users": {
      "get": {
        "description": "Retrieves all plans",
        "operationId": "PlansController_getUsersPlans",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlansResponsePaginatedDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Plans"
        ]
      }
    },
    "/plans/users/{userId}": {
      "get": {
        "description": "Retrieves all plans",
        "operationId": "PlansController_getUserPlan",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlansDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Plans"
        ]
      },
      "post": {
        "description": "Retrieves all plans",
        "operationId": "PlansController_createUserPlan",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePlansDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlansDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Plans"
        ]
      },
      "patch": {
        "description": "Retrieves all plans",
        "operationId": "PlansController_updateUserPlan",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePlansDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlansDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Plans"
        ]
      }
    },
    "/vr/generate-code/{userId}": {
      "post": {
        "operationId": "VrAuthController_generateCode",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "VrAuth"
        ]
      }
    },
    "/vr/validate-code": {
      "post": {
        "operationId": "VrAuthController_validateCode",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "VrAuth"
        ]
      }
    }
  },
  "info": {
    "title": "Carespace Api",
    "description": "The Carespace API documentation",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [
    {
      "url": "https://api-dev.carespace.ai",
      "description": "Development environment"
    }
  ],
  "components": {
    "schemas": {},
    "securitySchemes": {
      "Bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    }
  }
}